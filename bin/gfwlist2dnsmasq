#!/usr/bin/env ruby

require 'optparse'
require 'open-uri'
require 'yaml'
require 'base64'
require 'set'

class GFWListConverter
  COMMENT_PATTERN = /^\!|\[|^@@|^\d+\.\d+\.\d+\.\d+/
  DOMAIN_PATTERN = /([\w\-\_]+\.[\w\.\-\_]+)[\/\*]*/

  attr_accessor :config, :extras, :outfile

  def initialize(config)
    self.config = config
  end

  def run
    base_url = config['base_url']
    dns_host = config['dns_host']
    dns_port = config['dns_port']
    ipset_name = config['ipset_name']
    self.outfile = './gfwlist.conf' if outfile.nil?
    domains = Set.new

    data = open(base_url) { |io| io.read }
    Base64.decode64(data).lines.each do |l|
      l.chomp!

      if COMMENT_PATTERN.match(l)
        #puts "Comment: #{l}"
      elsif match = DOMAIN_PATTERN.match(l)
        domains << match[1]
        #puts "Added: #{l}"
      else
        #puts "No valid domain: #{l}"
      end
    end

    domains += extras unless extras.nil?

    File.open(outfile, 'w') do |f|
      domains.each do |d|
        f.puts "server=/.#{d}/#{dns_host}##{dns_port}"
        f.puts "ipset=/.#{d}/#{ipset_name}"
      end
    end
  end

end

options = { config: nil, extras: nil, outfile: nil }

parser = OptionParser.new do |opts|
  opts.banner = 'Usage: gfwlist2dnsmasq [options]'
  opts.on('-c', '--config name', 'Config file') do |config|
    options[:config] = config
  end
  opts.on('-e', '--extras name', 'Extras file') do |extras|
    options[:extras] = extras
  end
  opts.on('-o', '--output file', 'Output file') do |outfile|
    options[:outfile] = outfile
  end
  opts.on('-h', '--help', 'Displays Help') do
    puts opts
    exit
  end
end

parser.parse!

if options[:config].nil?
  puts 'Need config path'
  exit
else
  config = YAML.load(File.open(options[:config]))
  extras = YAML.load(File.open(options[:extras])) unless options[:extras].nil?
  outfile = options[:outfile]

  c = GFWListConverter.new(config)
  c.extras = extras
  c.outfile = outfile
  c.run
end
